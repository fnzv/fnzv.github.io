{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/blog/2021-03-19-benford-law-checker","result":{"data":{"site":{"siteMetadata":
    
    {"title":"sami.pw","siteUrl":"https://sami.pw"}},"markdownRemark":
        
        {"html": "<p>Since COVID-19 is the year most hot topic i decided that might be a good idea to test my newly created experiment with Go in order to check the Benford Law on public datasets.</p>
        <p>So first of all what is the Benford's Law?</p><br> <br><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">According to online resources the Benfordâ€™s law (also called the first digit law) states that the leading digits in a collection of data sets are probably going to be small.</code></pre></div>
        
        <p>In a nutshell, if we have a dataset containing numbers we will mostlikely find numbers starting with 1,2,3,4,5 since these will cover almost 75% of the number distribution (e.g. starting with 1 - 31% , 2 17% etc..)</p>
        <p align=\"center\">
          <img src=\"https://raw.githubusercontent.com/fnzv/benford_checker/main/imgs/BenfordsLaw_800.gif?raw=true\" >
        </p>
        <h3>The experiment</h3>
        
        <p>My little experiment starts with the COVID-19 Dataset in order to see if those data are considered Benford's Law \"Compliant\".
        <br><br>
        The dataset is populated by COVID-19 cases on a daily basis around 17-18 PM CEST from the italian govt's \"Protezione Civile\", if you are interested into this data you can find it here:<br>
        - <a href=\"https://github.com/pcm-dpc/COVID-19\">https://github.com/pcm-dpc/COVID-19</a><br>
        <br>
        For almost one year i integrated these datasets into a Telegram Channel in order to track down cases and make some stats that you don't get from the TV stations (if you are interested here is the link: <a href=\"https://t.me/covidinfoshare \">https://t.me/covidinfoshare</a> - powered by a scheduled GitlabCI pipeline ðŸ™‚) <br>
        Returning back to our Benford's Law, here are the results of my small script runs against the same dataset but on different scopes such as regions,province and entire nation:</p>
        
        <p align=\"center\">
          <img src=\"https://raw.githubusercontent.com/fnzv/benford_checker/main/imgs/xls-screen.png\"  width=\"850\" height=\"400\"><br>
          TLDR: BFC-0 Not Benford Law Complaint, BFC-4 Compliant till the fifth digit
        </p>
        
        <p>Google Sheet link <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1S0MzSyLCgGmjv-bDjXtANjvHeC7Luwu56Gew0yavZZU/edit?usp=sharing\">here</a><br></p>
        
        
        <p>In case you want to run the bf_checker on your machine feel free to clone the repo <a href=\"https://github.com/fnzv/benford_checker\">here</a> and execute the command to process the remote dataset (you can find the samples in the same repo).<br>
        <br>
        As you can see the results are not 100% Benford's Law Compliant as you may expect but we can see a clear pattern from local level (dataset-province) to nation level (dataset-nazionali) because of the granularity of data (if you have more numbers mostlikely you will reduce noise such as timestamps/dates an so on)
        </p>
        
        <p>
        Another interesting thing about this first digit law is the enourmous number of papers/studies around this law that shows clearly that can be used for different scopes such as:<br>
        - Forensics (e.g. fake pictures, file manipulation)<br>
        - Fraud checks (Taxes payment forms...)<br>
        - Data validation<br>
        <br><br>
        But there are always limits because not any kind of dataset can be checked for example running the checker on log files may lead to a very large number of 2 digits (2021/xx/xx + time etc..) thus making the results less relevant (or forcing the 2 the first digit)<br>
        </p>
        
        <p>Links and Resources:<br></p>
        <ul>
        <li><a href=\"https://github.com/fnzv/benford_checker\">Benford's checker Github</a><br></li>
        <li><a href=\"https://github.com/pcm-dpc/COVID-19 \">Dataset Protezione Civile - Italian COVID-19 data</a>  <br></li>
        <li><a href=\"https://mathworld.wolfram.com/BenfordsLaw.html\">https://mathworld.wolfram.com/BenfordsLaw.html</a><br></li>
        <li><a href=\"https://en.wikipedia.org/wiki/Connected_(2020_TV_series)\">Documentary: Connected 2020 - Episode - Numbers</a><br></li>
        </ul>
        <p>wq!<br>
        CTRL+R(reverse-i-search)`add': git add . &#x26;&#x26; git commit -m \"2021-03-19-benford-law-checker Commit\" &#x26;&#x26; git push origin master </p>","frontmatter":{"date":"May 30, 2020","path":"/blog/2021-03-19-benford-law-checker","tags":"math","title":"Automatic failover using Interlock + CI/CD(s)"}}},"pageContext":{"refPath":"/blog/2020-05-30-automatic-failover-interlock",
            "prev":{"frontmatter":{"title":"Automatic failover using Interlock + CI/CD(s)","path":"/blog/2020-05-30-automatic-failover-interlock"}},"next":false}}}
            
