{"version":3,"sources":["webpack:///./src/shapes/site.js","webpack:///./src/templates/tags.jsx","webpack:///./src/shapes/page-context.js"],"names":["PropTypes","shape","siteMetadata","title","string","description","siteUrl","isRequired","Tags","pageContext","posts","tag","site","data","length","tagsQuery","context","oneOfType","bool","frontmatter","path","next","prev"],"mappings":"2FAAA,yBAEeA,IAAUC,MAAM,CAC7BC,aAAcF,IAAUC,MAAM,CAC5BE,MAAOH,IAAUI,OACjBC,YAAaL,IAAUI,OACvBE,QAASN,IAAUI,SAClBG,aALL,Y,kCCFA,0JA+CeC,UArCF,SAAC,GAAD,QAAGC,YAAeC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,IAAqCC,EAA9D,EAAgCC,KAAQD,KAAQV,aAAhD,OACX,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,yBACGS,EACA,IAFH,IAIG,IACAC,EAAKT,QAGV,sBAAKQ,GACL,2BACGD,EAAMI,OACN,IACiB,IAAjBJ,EAAMI,OAAe,QAAU,OAC/B,IAJH,KAMG,IACAH,EAPH,KAUA,2BACE,YAAC,IAAD,CAAOD,MAAOA,QAef,IAAMK,EAAS,a,kCCjDtB,yBAEaC,EAAUhB,IAAUiB,UAAU,CACzCjB,IAAUkB,KACVlB,IAAUC,MAAM,CACdkB,YAAanB,IAAUC,MAAM,CAC3BE,MAAOH,IAAUI,OAAOG,WACxBa,KAAMpB,IAAUI,OAAOG,iBAKdP,IAAUC,MAAM,CAC7BoB,KAAML,EACNM,KAAMN","file":"component---src-templates-tags-jsx-b1114713c2b68495a1e3.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  siteMetadata: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    siteUrl: PropTypes.string,\n  }).isRequired,\n}).isRequired;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport Layout from '../components/layout';\nimport CenterWrap from '../components/center-wrap';\nimport pageContextShape from '../shapes/page-context';\nimport siteShape from '../shapes/site';\nimport Posts from '../components/posts';\n\nconst Tags = ({ pageContext: { posts, tag }, data: { site: { siteMetadata: site } } }) => (\n  <Layout>\n    <CenterWrap>\n      <Helmet>\n        <title>\n          {tag}\n          {' '}\n          &middot;\n          {' '}\n          {site.title}\n        </title>\n      </Helmet>\n      <h2>{tag}</h2>\n      <section>\n        {posts.length}\n        {' '}\n        {posts.length !== 1 ? 'posts' : 'post'}\n        {' '}\n        in\n        {' '}\n        {tag}\n        .\n      </section>\n      <section>\n        <Posts posts={posts} />\n      </section>\n    </CenterWrap>\n  </Layout>\n);\n\nTags.propTypes = {\n  data: PropTypes.shape({\n    site: siteShape,\n  }).isRequired,\n  pageContext: pageContextShape.isRequired,\n};\n\nexport default Tags;\n\nexport const tagsQuery = graphql`\n  query TagsSiteMetadata {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\n\nexport const context = PropTypes.oneOfType([\n  PropTypes.bool,\n  PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      path: PropTypes.string.isRequired,\n    }),\n  }),\n]);\n\nexport default PropTypes.shape({\n  next: context,\n  prev: context,\n});\n"],"sourceRoot":""}